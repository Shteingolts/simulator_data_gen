# Compute elastic constant tensor for a crystal
#
# Written by Aidan Thompson (Sandia, athomps@sandia.gov)
#
#  This script uses the following three include files.
#
#   init.mod      (must be modified for different crystal structures)
# 	       	  Define units, deformation parameters and initial
#		  configuration of the atoms and simulation cell.  
#
#
#   potential.mod    (must be modified for different pair styles)
# 		     Define pair style and other attributes 
#		     not stored in restart file
#
#
#   displace.mod    (displace.mod should not need to be modified)
# 		    Perform positive and negative box displacements 
# 		    in direction ${dir} and size ${up}. 
# 		    It uses the resultant changes 
#		    in stress to compute one
# 		    row of the elastic stiffness tensor
#		    
#		    Inputs variables:
#		    	   dir = the Voigt deformation component 
#		    		    (1,2,3,4,5,6)  
#		    Global constants:
#       	    	   up = the deformation magnitude (strain units)
#       		   cfac = conversion from LAMMPS pressure units to 
#               	   output units for elastic constants 
#
#
#  To run this on a different system, it should only be necessary to 
#  modify the files init.mod and potential.mod. In order to calculate
#  the elastic constants correctly, care must be taken to specify
#  the correct units in init.mod (units, cfac and cunits). It is also
#  important to verify that the minimization of energy w.r.t atom
#  positions in the deformed cell is fully converged.
#  One indication of this is that the elastic constants are insensitive
#  to the choice of the variable ${up} in init.mod. Another is to check
#  the final max and two-norm forces reported in the log file. If you know
#  that minimization is not required, you can set maxiter = 0.0 in 
#  init.mod. 
#

variable dt equal 0.01
variable strain equal 0.025
variable srate equal 1e-6
variable M equal 1000 # averaging time for properties
variable strainsteps equal ${strain}/${dt}/${srate}


dimension 2
include init.mod
include potential.mod


#change_box all triclinic
comm_modify mode single cutoff 10.0 vel yes
atom_modify sort 0 0


# Compute initial state
fix 3 all box/relax x 0 y 0 # xy 0  #MS comment: relax if the network is periodic
minimize ${etol} ${ftol} ${maxiter} ${maxeval}
thermo 100
# thermo_style custom step atoms temp press c_vx c_vy c_vz
unfix 3
fix 2d all enforce2d


# These formulas define the derivatives w.r.t. strain components
# Constants uses $, variables use v_ 
timestep        ${dt}
variable nsteps equal round(${strainsteps})

fix             4 all nve
fix             5 all langevin 0.1 0.1 1 904297
#fix		6 all press/berendsen y  0.0 0.0 1 x 0.0 0.0 10
fix             6 all nph y 0.0 0.0 10 ptemp 0.1 # x 0.0 0.0 10

# For PLUMED2
# fix 22 all plumed plumedfile plumed.dat outfile plumed.out

#fix             6 all nph x 0.0 0.0 10 
fix     	9 all deform 1 x erate -${srate} units box remap x
#fix     8 all deform 1 xy erate ${srate} units box remap x
#fix    10 all ave/time

#To avoid flying ice cube phenomenon:
#fix 21 all momentum 100 linear 1 1 1 angular

dump 1 all custom 200 dump.lammpstrj id x y z vx vy vz
run  ${nsteps}
